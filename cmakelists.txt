cmake_minimum_required(VERSION 3.10)

project(vro)

if(MSVC)
  add_compile_options(/W4 /WX)
else()
  add_compile_options(-Wall -Wextra -Wpedantic -Werror)
endif()

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

file(GLOB_RECURSE VRO_SOURCES "src/*.ixx")
file(GLOB_RECURSE SHADERS "src/*.vert" "src/*.frag")

set(SHADER_OUT_DIR ${CMAKE_CURRENT_LIST_DIR}/shaders) 
file(MAKE_DIRECTORY ${SHADER_OUT_DIR})

foreach(SHADER ${SHADERS})
  get_filename_component(SHADER_NAME ${SHADER} NAME)
  set(SPIRV_OUTPUT ${SHADER_OUT_DIR}/${SHADER_NAME}.spv)

  add_custom_command(
    OUTPUT ${SPIRV_OUTPUT}
    COMMAND $ENV{VULKAN_SDK}/Bin/glslc ${SHADER} -o ${SPIRV_OUTPUT}
    DEPENDS ${SHADER}
    COMMENT "Compiling shader: ${SHADER}"
    VERBATIM
  )

  list(APPEND SPIRV_SHADERS ${SPIRV_OUTPUT})
endforeach()

add_custom_target(compile_shaders ALL DEPENDS ${SPIRV_SHADERS})

add_executable(vro ${VRO_SOURCES})
target_include_directories(vro PUBLIC "$ENV{VULKAN_SDK}/Include")
target_link_libraries(vro "$ENV{VULKAN_SDK}/Lib/vulkan-1.lib")