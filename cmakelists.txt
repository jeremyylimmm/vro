cmake_minimum_required(VERSION 3.10)

project(vro)

if(MSVC)
  add_compile_options(/W4 /WX)
else()
  add_compile_options(-Wall -Wextra -Wpedantic -Werror)
endif()

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

file(GLOB_RECURSE CORE_SOURCES "src/engine/*.ixx")

if (WIN32)
  file(GLOB_RECURSE PLATFORM_SOURCES "src/platform/win32/*.ixx")
  set(VULKAN_SDK_PATH $ENV{VULKAN_SDK})
elseif (APPLE)
  file(GLOB_RECURSE PLATFORM_SOURCES "src/platform/macos/*.ixx")
  set(VULKAN_SDK_PATH $ENV{HOME}/VulkanSDK/1.3.296.0/macos)
endif()

file(GLOB_RECURSE SHADERS "src/*.vert" "src/*.frag")

set(SHADER_OUT_DIR ${CMAKE_CURRENT_LIST_DIR}/shaders) 
file(MAKE_DIRECTORY ${SHADER_OUT_DIR})

foreach(SHADER ${SHADERS})
  get_filename_component(SHADER_NAME ${SHADER} NAME)
  set(SPIRV_OUTPUT ${SHADER_OUT_DIR}/${SHADER_NAME}.spv)

  add_custom_command(
    OUTPUT ${SPIRV_OUTPUT}
    COMMAND ${VULKAN_SDK_PATH}/Bin/glslc ${SHADER} -o ${SPIRV_OUTPUT}
    DEPENDS ${SHADER}
    COMMENT "Compiling shader: ${SHADER}"
    VERBATIM
  )

  list(APPEND SPIRV_SHADERS ${SPIRV_OUTPUT})
endforeach()

add_custom_target(compile_shaders ALL DEPENDS ${SPIRV_SHADERS})

add_executable(vro ${CORE_SOURCES} ${PLATFORM_SOURCES})
add_dependencies(vro compile_shaders)
set_property(TARGET vro PROPERTY VS_DEBUGGER_WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR})
target_include_directories(vro PUBLIC ${VULKAN_SDK_PATH}/Include)
target_link_libraries(vro ${VULKAN_SDK_PATH}/Lib/vulkan-1.lib)